/* This file is autogenerated by tracetool, do not edit. */

#ifndef TRACE_TARGET_LOONGARCH_GENERATED_TRACERS_H
#define TRACE_TARGET_LOONGARCH_GENERATED_TRACERS_H

#include "trace/control.h"

extern TraceEvent _TRACE_KVM_FAILED_GET_REGS_CORE_EVENT;
extern TraceEvent _TRACE_KVM_FAILED_PUT_REGS_CORE_EVENT;
extern TraceEvent _TRACE_KVM_FAILED_GET_FPU_EVENT;
extern TraceEvent _TRACE_KVM_FAILED_PUT_FPU_EVENT;
extern TraceEvent _TRACE_KVM_FAILED_GET_MPSTATE_EVENT;
extern TraceEvent _TRACE_KVM_FAILED_PUT_MPSTATE_EVENT;
extern TraceEvent _TRACE_KVM_FAILED_GET_COUNTER_EVENT;
extern TraceEvent _TRACE_KVM_FAILED_PUT_COUNTER_EVENT;
extern TraceEvent _TRACE_KVM_FAILED_GET_CPUCFG_EVENT;
extern TraceEvent _TRACE_KVM_FAILED_PUT_CPUCFG_EVENT;
extern TraceEvent _TRACE_KVM_ARCH_HANDLE_EXIT_EVENT;
extern TraceEvent _TRACE_KVM_SET_INTR_EVENT;
extern uint16_t _TRACE_KVM_FAILED_GET_REGS_CORE_DSTATE;
extern uint16_t _TRACE_KVM_FAILED_PUT_REGS_CORE_DSTATE;
extern uint16_t _TRACE_KVM_FAILED_GET_FPU_DSTATE;
extern uint16_t _TRACE_KVM_FAILED_PUT_FPU_DSTATE;
extern uint16_t _TRACE_KVM_FAILED_GET_MPSTATE_DSTATE;
extern uint16_t _TRACE_KVM_FAILED_PUT_MPSTATE_DSTATE;
extern uint16_t _TRACE_KVM_FAILED_GET_COUNTER_DSTATE;
extern uint16_t _TRACE_KVM_FAILED_PUT_COUNTER_DSTATE;
extern uint16_t _TRACE_KVM_FAILED_GET_CPUCFG_DSTATE;
extern uint16_t _TRACE_KVM_FAILED_PUT_CPUCFG_DSTATE;
extern uint16_t _TRACE_KVM_ARCH_HANDLE_EXIT_DSTATE;
extern uint16_t _TRACE_KVM_SET_INTR_DSTATE;
#define TRACE_KVM_FAILED_GET_REGS_CORE_ENABLED 1
#define TRACE_KVM_FAILED_PUT_REGS_CORE_ENABLED 1
#define TRACE_KVM_FAILED_GET_FPU_ENABLED 1
#define TRACE_KVM_FAILED_PUT_FPU_ENABLED 1
#define TRACE_KVM_FAILED_GET_MPSTATE_ENABLED 1
#define TRACE_KVM_FAILED_PUT_MPSTATE_ENABLED 1
#define TRACE_KVM_FAILED_GET_COUNTER_ENABLED 1
#define TRACE_KVM_FAILED_PUT_COUNTER_ENABLED 1
#define TRACE_KVM_FAILED_GET_CPUCFG_ENABLED 1
#define TRACE_KVM_FAILED_PUT_CPUCFG_ENABLED 1
#define TRACE_KVM_ARCH_HANDLE_EXIT_ENABLED 1
#define TRACE_KVM_SET_INTR_ENABLED 1
#include "qemu/log-for-trace.h"
#include "qemu/error-report.h"


#define TRACE_KVM_FAILED_GET_REGS_CORE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_FAILED_GET_REGS_CORE) || \
    false)

static inline void _nocheck__trace_kvm_failed_get_regs_core(const char * msg)
{
    if (trace_event_get_state(TRACE_KVM_FAILED_GET_REGS_CORE) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 4 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_failed_get_regs_core " "Failed to get core regs from KVM: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , msg);
#line 64 "trace/trace-target_loongarch.h"
        } else {
#line 4 "../target/loongarch/trace-events"
            qemu_log("kvm_failed_get_regs_core " "Failed to get core regs from KVM: %s" "\n", msg);
#line 68 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_failed_get_regs_core(const char * msg)
{
    if (true) {
        _nocheck__trace_kvm_failed_get_regs_core(msg);
    }
}

#define TRACE_KVM_FAILED_PUT_REGS_CORE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_FAILED_PUT_REGS_CORE) || \
    false)

static inline void _nocheck__trace_kvm_failed_put_regs_core(const char * msg)
{
    if (trace_event_get_state(TRACE_KVM_FAILED_PUT_REGS_CORE) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 5 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_failed_put_regs_core " "Failed to put core regs into KVM: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , msg);
#line 95 "trace/trace-target_loongarch.h"
        } else {
#line 5 "../target/loongarch/trace-events"
            qemu_log("kvm_failed_put_regs_core " "Failed to put core regs into KVM: %s" "\n", msg);
#line 99 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_failed_put_regs_core(const char * msg)
{
    if (true) {
        _nocheck__trace_kvm_failed_put_regs_core(msg);
    }
}

#define TRACE_KVM_FAILED_GET_FPU_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_FAILED_GET_FPU) || \
    false)

static inline void _nocheck__trace_kvm_failed_get_fpu(const char * msg)
{
    if (trace_event_get_state(TRACE_KVM_FAILED_GET_FPU) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 6 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_failed_get_fpu " "Failed to get fpu from KVM: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , msg);
#line 126 "trace/trace-target_loongarch.h"
        } else {
#line 6 "../target/loongarch/trace-events"
            qemu_log("kvm_failed_get_fpu " "Failed to get fpu from KVM: %s" "\n", msg);
#line 130 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_failed_get_fpu(const char * msg)
{
    if (true) {
        _nocheck__trace_kvm_failed_get_fpu(msg);
    }
}

#define TRACE_KVM_FAILED_PUT_FPU_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_FAILED_PUT_FPU) || \
    false)

static inline void _nocheck__trace_kvm_failed_put_fpu(const char * msg)
{
    if (trace_event_get_state(TRACE_KVM_FAILED_PUT_FPU) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 7 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_failed_put_fpu " "Failed to put fpu into KVM: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , msg);
#line 157 "trace/trace-target_loongarch.h"
        } else {
#line 7 "../target/loongarch/trace-events"
            qemu_log("kvm_failed_put_fpu " "Failed to put fpu into KVM: %s" "\n", msg);
#line 161 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_failed_put_fpu(const char * msg)
{
    if (true) {
        _nocheck__trace_kvm_failed_put_fpu(msg);
    }
}

#define TRACE_KVM_FAILED_GET_MPSTATE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_FAILED_GET_MPSTATE) || \
    false)

static inline void _nocheck__trace_kvm_failed_get_mpstate(const char * msg)
{
    if (trace_event_get_state(TRACE_KVM_FAILED_GET_MPSTATE) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 8 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_failed_get_mpstate " "Failed to get mp_state from KVM: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , msg);
#line 188 "trace/trace-target_loongarch.h"
        } else {
#line 8 "../target/loongarch/trace-events"
            qemu_log("kvm_failed_get_mpstate " "Failed to get mp_state from KVM: %s" "\n", msg);
#line 192 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_failed_get_mpstate(const char * msg)
{
    if (true) {
        _nocheck__trace_kvm_failed_get_mpstate(msg);
    }
}

#define TRACE_KVM_FAILED_PUT_MPSTATE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_FAILED_PUT_MPSTATE) || \
    false)

static inline void _nocheck__trace_kvm_failed_put_mpstate(const char * msg)
{
    if (trace_event_get_state(TRACE_KVM_FAILED_PUT_MPSTATE) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 9 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_failed_put_mpstate " "Failed to put mp_state into KVM: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , msg);
#line 219 "trace/trace-target_loongarch.h"
        } else {
#line 9 "../target/loongarch/trace-events"
            qemu_log("kvm_failed_put_mpstate " "Failed to put mp_state into KVM: %s" "\n", msg);
#line 223 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_failed_put_mpstate(const char * msg)
{
    if (true) {
        _nocheck__trace_kvm_failed_put_mpstate(msg);
    }
}

#define TRACE_KVM_FAILED_GET_COUNTER_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_FAILED_GET_COUNTER) || \
    false)

static inline void _nocheck__trace_kvm_failed_get_counter(const char * msg)
{
    if (trace_event_get_state(TRACE_KVM_FAILED_GET_COUNTER) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 10 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_failed_get_counter " "Failed to get counter from KVM: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , msg);
#line 250 "trace/trace-target_loongarch.h"
        } else {
#line 10 "../target/loongarch/trace-events"
            qemu_log("kvm_failed_get_counter " "Failed to get counter from KVM: %s" "\n", msg);
#line 254 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_failed_get_counter(const char * msg)
{
    if (true) {
        _nocheck__trace_kvm_failed_get_counter(msg);
    }
}

#define TRACE_KVM_FAILED_PUT_COUNTER_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_FAILED_PUT_COUNTER) || \
    false)

static inline void _nocheck__trace_kvm_failed_put_counter(const char * msg)
{
    if (trace_event_get_state(TRACE_KVM_FAILED_PUT_COUNTER) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 11 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_failed_put_counter " "Failed to put counter into KVM: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , msg);
#line 281 "trace/trace-target_loongarch.h"
        } else {
#line 11 "../target/loongarch/trace-events"
            qemu_log("kvm_failed_put_counter " "Failed to put counter into KVM: %s" "\n", msg);
#line 285 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_failed_put_counter(const char * msg)
{
    if (true) {
        _nocheck__trace_kvm_failed_put_counter(msg);
    }
}

#define TRACE_KVM_FAILED_GET_CPUCFG_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_FAILED_GET_CPUCFG) || \
    false)

static inline void _nocheck__trace_kvm_failed_get_cpucfg(const char * msg)
{
    if (trace_event_get_state(TRACE_KVM_FAILED_GET_CPUCFG) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 12 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_failed_get_cpucfg " "Failed to get cpucfg from KVM: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , msg);
#line 312 "trace/trace-target_loongarch.h"
        } else {
#line 12 "../target/loongarch/trace-events"
            qemu_log("kvm_failed_get_cpucfg " "Failed to get cpucfg from KVM: %s" "\n", msg);
#line 316 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_failed_get_cpucfg(const char * msg)
{
    if (true) {
        _nocheck__trace_kvm_failed_get_cpucfg(msg);
    }
}

#define TRACE_KVM_FAILED_PUT_CPUCFG_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_FAILED_PUT_CPUCFG) || \
    false)

static inline void _nocheck__trace_kvm_failed_put_cpucfg(const char * msg)
{
    if (trace_event_get_state(TRACE_KVM_FAILED_PUT_CPUCFG) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 13 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_failed_put_cpucfg " "Failed to put cpucfg into KVM: %s" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , msg);
#line 343 "trace/trace-target_loongarch.h"
        } else {
#line 13 "../target/loongarch/trace-events"
            qemu_log("kvm_failed_put_cpucfg " "Failed to put cpucfg into KVM: %s" "\n", msg);
#line 347 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_failed_put_cpucfg(const char * msg)
{
    if (true) {
        _nocheck__trace_kvm_failed_put_cpucfg(msg);
    }
}

#define TRACE_KVM_ARCH_HANDLE_EXIT_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_ARCH_HANDLE_EXIT) || \
    false)

static inline void _nocheck__trace_kvm_arch_handle_exit(int num)
{
    if (trace_event_get_state(TRACE_KVM_ARCH_HANDLE_EXIT) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 14 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_arch_handle_exit " "kvm arch handle exit, the reason number: %d" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , num);
#line 374 "trace/trace-target_loongarch.h"
        } else {
#line 14 "../target/loongarch/trace-events"
            qemu_log("kvm_arch_handle_exit " "kvm arch handle exit, the reason number: %d" "\n", num);
#line 378 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_arch_handle_exit(int num)
{
    if (true) {
        _nocheck__trace_kvm_arch_handle_exit(num);
    }
}

#define TRACE_KVM_SET_INTR_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_SET_INTR) || \
    false)

static inline void _nocheck__trace_kvm_set_intr(int irq, int level)
{
    if (trace_event_get_state(TRACE_KVM_SET_INTR) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 15 "../target/loongarch/trace-events"
            qemu_log("%d@%zu.%06zu:kvm_set_intr " "kvm set interrupt, irq num: %d, level: %d" "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , irq, level);
#line 405 "trace/trace-target_loongarch.h"
        } else {
#line 15 "../target/loongarch/trace-events"
            qemu_log("kvm_set_intr " "kvm set interrupt, irq num: %d, level: %d" "\n", irq, level);
#line 409 "trace/trace-target_loongarch.h"
        }
    }
}

static inline void trace_kvm_set_intr(int irq, int level)
{
    if (true) {
        _nocheck__trace_kvm_set_intr(irq, level);
    }
}
#endif /* TRACE_TARGET_LOONGARCH_GENERATED_TRACERS_H */
